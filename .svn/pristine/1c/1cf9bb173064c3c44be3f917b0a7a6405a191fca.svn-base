<!DOCTYPE html>

<html>
 	<head>
      	<meta charset="utf-8"/>
  		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
  		<meta http-equiv="Content-Security-Policy" content="default-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'">
            <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
  		<title>CK-12 Simulations</title>
  		<link rel="stylesheet" href="vendor/fonts/font-roboto/font-roboto.css"/>
  		<link rel="stylesheet" href="css/launcher.css" />
		<script src="../cordova.js"></script>
		<script type="text/javascript" charset="utf-8"></script>
  		<!--<script src="//dvninqhj78q4x.cloudfront.net/dexterjs/dexterjs.min.js"></script>
  		<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>-->
  		<script type="text/javascript" src="vendor/classList.js"></script>
  		<script type="text/javascript" src="../auth/components/jquery/jquery.js"></script>
  		<script type="text/javascript" src="../auth/js/app.js"></script>
  		<script type="text/javascript" src="vendor/require/require.js"></script>
  		<script type="text/javascript" src="../auth/utils/properties.js"></script>
  		<script type="text/javascript" src="js/launcher.js"></script>
  		<!--<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0], j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src= '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f); })(window,document,'script','dataLayer','GTM-NFJ3V2');</script>
  		<noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-NFJ3V2" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>-->
 	</head>
 	<body>
		<script>require(['Launcher'/*,'//dvninqhj78q4x.cloudfront.net/dexterjs/dexterjs.min.js'*/]);
            (function() {
             $(document).on('click', 'a', function (event) {
                            event.preventDefault();
                            window.open($(this).attr('href'), '_system');
                            return false;
                            });
             var
             fullScreenApi = {
             supportsFullScreen: false,
             isFullScreen: function() { return false; },
             requestFullScreen: function() {},
             cancelFullScreen: function() {},
             fullScreenEventName: '',
             prefix: ''
             },
             browserPrefixes = 'webkit moz o ms khtml'.split(' ');
             
             // check for native support
             if (typeof document.cancelFullScreen != 'undefined') {
             fullScreenApi.supportsFullScreen = true;
             } else {
             // check for fullscreen support by vendor prefix
             for (var i = 0, il = browserPrefixes.length; i < il; i++ ) {
             fullScreenApi.prefix = browserPrefixes[i];
             
             if (typeof document[fullScreenApi.prefix + 'CancelFullScreen' ] != 'undefined' ) {
             fullScreenApi.supportsFullScreen = true;
             
             break;
             }
             }
             }
             
             // update methods to do something useful
             if (fullScreenApi.supportsFullScreen) {
             fullScreenApi.fullScreenEventName = fullScreenApi.prefix + 'fullscreenchange';
             
             fullScreenApi.isFullScreen = function() {
             switch (this.prefix) {
             case '':
             return document.fullScreen;
             case 'webkit':
             return document.webkitIsFullScreen;
             default:
             return document[this.prefix + 'FullScreen'];
             }
             }
             fullScreenApi.requestFullScreen = function(el) {
             return (this.prefix === '') ? el.requestFullScreen() : el[this.prefix + 'RequestFullScreen']();
             }
             fullScreenApi.cancelFullScreen = function(el) {
             return (this.prefix === '') ? document.cancelFullScreen() : document[this.prefix + 'CancelFullScreen']();
             }
             }
             
             // jQuery plugin
             if (typeof jQuery != 'undefined') {
             jQuery.fn.requestFullScreen = function() {
             
             return this.each(function() {
                              if (fullScreenApi.supportsFullScreen) {
                              fullScreenApi.requestFullScreen(this);
                              }
                              });
             };
             }
             
             // export api
             window.fullScreenApi = fullScreenApi;
             })();
            
            </script>
 	</body>
</html>